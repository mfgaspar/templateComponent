<?xml version="1.0" encoding="UTF-8"?>
<CDADescriptor>
   <DataSources>
      <Connection id="emptyTemplateQuery" type="scripting.scripting">
         <Initscript></Initscript>
         <Language>beanshell</Language>
      </Connection>
      <Connection id="templateQuery" type="scripting.scripting">
         <Initscript></Initscript>
         <Language>beanshell</Language>
      </Connection>
      <Connection id="githubStats" type="kettle.TransFromFile">
         <KtrFile>resources/queries/githubStats.ktr</KtrFile>
         <variables datarow-name="OWNER" variable-name="OWNER"/>
         <variables datarow-name="REPO" variable-name="REPO"/>
         <variables datarow-name="SHA" variable-name="SHA"/>
      </Connection>
   </DataSources>
   <DataAccess access="public" cache="true" cacheDuration="3600"
               connection="emptyTemplateQuery"
               id="emptyTemplateQuery"
               type="scriptable">
      <Columns/>
      <Parameters/>
      <Query>import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;    
String[] columnNames = new String[]{											
	"Name",	"Description",	"Latitude",	"Longitude", "enabled",	"date",	"bullet",	"v1",	"v2",	"v3"	
};											
Class[] columnTypes = new Class[]{											
	String.class,	String.class,	Float.class,	Float.class,	Boolean.class,	String.class,	String.class,	Float.class,	Float.class,	Float.class	
};											
TypedTableModel model = new TypedTableModel(columnNames, columnTypes);											

return model;</Query>
   </DataAccess>
   <DataAccess access="public" cache="true" cacheDuration="3600" connection="templateQuery"
               id="templateQuery"
               type="scriptable">
      <Columns/>
      <Parameters/>
      <Query>import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;    
String[] columnNames = new String[]{											
	"Name",	"Description",	"Latitude",	"Longitude",	"enabled",	"date",	"bullet",	"v1",	"v2",	"v3"	
};											
Class[] columnTypes = new Class[]{											
	String.class,	String.class,	Float.class,	Float.class,	Boolean.class,	String.class,	String.class,	Float.class,	Float.class,	Float.class	
};											
TypedTableModel model = new TypedTableModel(columnNames, columnTypes);											
model.addRow(new Object[]{	new String ("CDA"),	new String ("Data Access"),	new Float(43.12404151),	new Float(17.07182076),	new Boolean(true),	new String("2014-12-24"),	new String ("54.35075125,22.41322006,75.05981995"),	new Float(54.35075125),	new Float(22.41322006),	new Float(75.05981995)	});
model.addRow(new Object[]{	new String ("CDE"),	new String ("Dashboard Editor"),	new Float(-17.41839566),	new Float(119.7625068),	new Boolean(true),	new String("2014-12-25"),	new String ("46.52281945,54.51525158,52.79385679"),	new Float(46.52281945),	new Float(54.51525158),	new Float(52.79385679)	});
model.addRow(new Object[]{	new String ("CDF"),	new String ("Dashboard Framework"),	new Float(-17.84303697),	new Float(-96.72580186),	new Boolean(true),	new String("2014-12-26"),	new String ("45.03409699,0.02939752151,86.2054509"),	new Float(45.03409699),	new Float(0.02939752151),	new Float(86.2054509)	});
model.addRow(new Object[]{	new String ("CCC"),	new String ("Charts Components"),	new Float(-28.65016157),	new Float(-24.05256525),	new Boolean(true),	new String("2014-12-27"),	new String ("35.89925775,51.4782757,84.2320869"),	new Float(35.89925775),	new Float(51.4782757),	new Float(84.2320869)	});
model.addRow(new Object[]{	new String ("CGG"),	new String ("Graphics Generator"),	new Float(-80.45989423),	new Float(135.234683),	new Boolean(true),	new String("2014-12-28"),	new String ("98.93216741,11.45434722,81.46034629"),	new Float(98.93216741),	new Float(11.45434722),	new Float(81.46034629)	});
model.addRow(new Object[]{	new String ("CPK"),	new String ("Plugin Kickstarter"),	new Float(-22.06705617),	new Float(29.63033197),	new Boolean(false),	new String("2014-12-29"),	new String ("80.76432443,35.17587706,73.72982155"),	new Float(80.76432443),	new Float(35.17587706),	new Float(73.72982155)	});
model.addRow(new Object[]{	new String ("CFR"),	new String ("File Repository"),	new Float(-64.86836197),	new Float(-62.77248056),	new Boolean(false),	new String("2014-12-30"),	new String ("13.51558242,14.6513744,97.66532517"),	new Float(13.51558242),	new Float(14.6513744),	new Float(97.66532517)	});
model.addRow(new Object[]{	new String ("CDG"),	new String ("Data Generator"),	new Float(-88.20733418),	new Float(-72.48848486),	new Boolean(false),	new String("2015-01-01"),	new String ("1.954412768,83.66806352,31.52089382"),	new Float(1.954412768),	new Float(83.66806352),	new Float(31.52089382)	});
model.addRow(new Object[]{	new String ("CBF"),	new String ("Build Framework"),	new Float(10.75148192),	new Float(-175.6339215),	new Boolean(true),	new String("2015-01-02"),	new String ("23.42902329,36.18434318,63.00424021"),	new Float(23.42902329),	new Float(36.18434318),	new Float(63.00424021)	});
return model;</Query>
   </DataAccess>
   <DataAccess access="public" cache="true" cacheDuration="3600" connection="githubStats"
               id="githubStats"
               type="kettle">
      <Columns/>
      <Output indexes="0,1,2" mode="exclude"/>
      <Parameters>
         <Parameter default="webdetails" name="ONWER" type="String"/>
         <Parameter default="cde" name="REPO" type="String"/>
         <Parameter default="master" name="SHA" type="String"/>
      </Parameters>
      <Query>OUTPUT</Query>
   </DataAccess>
</CDADescriptor>